import streamlit as st
import pandas as pd
import random
from fpdf import FPDF
from pathlib import Path
import re

# =============================
# SmartMama: –í–∞—à –ª–∏—á–Ω—ã–π –¥–∏–µ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø—Ä–∏ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏
# =============================

st.set_page_config(page_title="SmartMama", page_icon="ü§∞", layout="centered")
st.title("ü§∞ SmartMama: –≤–∞—à –ª–∏—á–Ω—ã–π –¥–∏–µ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø—Ä–∏ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏")
st.markdown("–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–∏–±–∞–≤–∫—É –≤–µ—Å–∞ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é")

# --- –ù–æ—Ä–º—ã –ø—Ä–∏–±–∞–≤–∫–∏ –ø–æ –ò–ú–¢ ---
norms = {
    "–ò–ú–¢ < 18.5": {"total_kg": "12.5‚Äì18", "weekly_kg": (0.44, 0.58)},
    "–ò–ú–¢ 18.5‚Äì24.9": {"total_kg": "11.5‚Äì16", "weekly_kg": (0.35, 0.50)},
    "–ò–ú–¢ 25.0‚Äì29.9": {"total_kg": "7‚Äì11", "weekly_kg": (0.23, 0.33)},
    "–ò–ú–¢ ‚â• 30.0": {"total_kg": "5‚Äì9", "weekly_kg": (0.17, 0.27)},
}

# --- –ú–µ–Ω—é –Ω–∞ 3 –¥–Ω—è (–Ω–∏–∑–∫–æ–ì–ò, –≤—ã—Å–æ–∫–æ–±–µ–ª–∫–æ–≤–æ–µ) ---
sample_menus = [
    """
üçΩÔ∏è *–ú–µ–Ω—é –Ω–∞ –¥–µ–Ω—å 1*
–ó–∞–≤—Ç—Ä–∞–∫: –û–º–ª–µ—Ç –∏–∑ 2 —è–∏—Ü —Å —à–ø–∏–Ω–∞—Ç–æ–º + –≥—Ä–µ—á–Ω–µ–≤–∞—è –∫–∞—à–∞ (50 –≥ —Å—É—Ö.) + –∑–µ–ª—ë–Ω—ã–π —á–∞–π
–ü–µ—Ä–µ–∫—É—Å: –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –π–æ–≥—É—Ä—Ç 200 –º–ª + –≥–æ—Ä—Å—Ç—å —á–µ—Ä–Ω–∏–∫–∏
–û–±–µ–¥: –ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ –Ω–∞ –ø–∞—Ä—É (120 –≥) + –±—Ä–æ–∫–∫–æ–ª–∏/—Ü–≤–µ—Ç–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞ (150 –≥) + –∫–∏–Ω–æ–∞ (40 –≥ —Å—É—Ö.)
–ü–µ—Ä–µ–∫—É—Å: –¢–≤–æ—Ä–æ–≥ 5% (100 –≥) + 1 —Å—Ç.–ª. –ª—å–Ω—è–Ω–æ–≥–æ —Å–µ–º–µ–Ω–∏
–£–∂–∏–Ω: –ó–∞–ø–µ—á—ë–Ω–Ω–∞—è —Ç—Ä–µ—Å–∫–∞ (100 –≥) + —Å–∞–ª–∞—Ç –∏–∑ –æ–≥—É—Ä—Ü–æ–≤, –ø–æ–º–∏–¥–æ—Ä–æ–≤, –∑–µ–ª–µ–Ω–∏ —Å 1 —á.–ª. –æ–ª–∏–≤–∫–æ–≤–æ–≥–æ –º–∞—Å–ª–∞
–ü–µ—Ä–µ–¥ —Å–Ω–æ–º: –°—Ç–∞–∫–∞–Ω –∫–µ—Ñ–∏—Ä–∞ 1% (200 –º–ª)
""",
    """
üçΩÔ∏è *–ú–µ–Ω—é –Ω–∞ –¥–µ–Ω—å 2*
–ó–∞–≤—Ç—Ä–∞–∫: –¢–≤–æ—Ä–æ–∂–Ω–∞—è –∑–∞–ø–µ–∫–∞–Ω–∫–∞ (—Ç–≤–æ—Ä–æ–≥ 150 –≥, —è–π—Ü–æ, —è–±–ª–æ–∫–æ) + —á–∞–π –±–µ–∑ —Å–∞—Ö–∞—Ä–∞
–ü–µ—Ä–µ–∫—É—Å: –ì–æ—Ä—Å—Ç—å –º–∏–Ω–¥–∞–ª—è (20 –≥) + —è–±–ª–æ–∫–æ
–û–±–µ–¥: –ò–Ω–¥–µ–π–∫–∞ –æ—Ç–≤–∞—Ä–Ω–∞—è (100 –≥) + —Ç—É—à–µ–Ω—ã–µ –∫–∞–±–∞—á–∫–∏ –∏ –º–æ—Ä–∫–æ–≤—å (200 –≥) + –±—É—Ä—ã–π —Ä–∏—Å (40 –≥ —Å—É—Ö.)
–ü–µ—Ä–µ–∫—É—Å: –ü—Ä–æ—Ç–µ–∏–Ω–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å –Ω–∞ –≤–æ–¥–µ –∏–ª–∏ –∫–µ—Ñ–∏—Ä–µ (–±–µ–∑ —Å–∞—Ö–∞—Ä–∞)
–£–∂–∏–Ω: –ó–∞–ø–µ—á—ë–Ω–Ω—ã–µ –æ–≤–æ—â–∏ (–±–∞–∫–ª–∞–∂–∞–Ω, —Ü—É–∫–∫–∏–Ω–∏, –ø–µ—Ä–µ—Ü) —Å —Ñ–µ—Ç–æ–π (30 –≥)
–ü–µ—Ä–µ–¥ —Å–Ω–æ–º: –†—è–∂–µ–Ω–∫–∞ 2.5% (200 –º–ª)
""",
    """
üçΩÔ∏è *–ú–µ–Ω—é –Ω–∞ –¥–µ–Ω—å 3*
–ó–∞–≤—Ç—Ä–∞–∫: –û–≤—Å—è–Ω–∫–∞ –Ω–∞ –≤–æ–¥–µ (40 –≥ —Å—É—Ö.) —Å —Ç—ã–∫–≤–æ–π –∏ –∫–æ—Ä–∏—Ü–µ–π + 1 –≤–∞—Ä—ë–Ω–æ–µ —è–π—Ü–æ
–ü–µ—Ä–µ–∫—É—Å: –ö–µ—Ñ–∏—Ä 1% (200 –º–ª) + 1 –≥—Ä—É—à–∞
–û–±–µ–¥: –ì–æ–≤—è–¥–∏–Ω–∞ —Ç—É—à—ë–Ω–∞—è (100 –≥) + —Å—Ç—Ä—É—á–∫–æ–≤–∞—è —Ñ–∞—Å–æ–ª—å (150 –≥) + –≥—Ä–µ—á–∫–∞ (40 –≥ —Å—É—Ö.)
–ü–µ—Ä–µ–∫—É—Å: –°–º—É–∑–∏: —à–ø–∏–Ω–∞—Ç, –æ–≥—É—Ä–µ—Ü, —Å–µ–ª—å–¥–µ—Ä–µ–π, –ª–∏–º–æ–Ω–Ω—ã–π —Å–æ–∫, –≤–æ–¥–∞
–£–∂–∏–Ω: –õ–æ—Å–æ—Å—å –Ω–∞ –ø–∞—Ä—É (100 –≥) + —Å–∞–ª–∞—Ç –∏–∑ —Ä—É–∫–∫–æ–ª—ã, –∞–≤–æ–∫–∞–¥–æ, –æ–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ
–ü–µ—Ä–µ–¥ —Å–Ω–æ–º: –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –π–æ–≥—É—Ä—Ç (150 –º–ª)
""",
]

# --- –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è PDF ---
# –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —à—Ä–∏—Ñ—Ç–µ
EMOJI_RE = re.compile(
    "["
    "\U0001F600-\U0001F64F"
    "\U0001F300-\U0001F5FF"
    "\U0001F680-\U0001F6FF"
    "\U0001F1E0-\U0001F1FF"
    "\U00002700-\U000027BF"
    "\U0001F900-\U0001F9FF"
    "\U00002600-\U000026FF"
    "\U00002B00-\U00002BFF"
    "\U0001FA70-\U0001FAFF"
    "]+",
    flags=re.UNICODE,
)

def strip_emoji(text: str) -> str:
    return EMOJI_RE.sub("", text)

def create_pdf(menu: str) -> bytes:
    pdf = FPDF()
    pdf.add_page()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —à—Ä–∏—Ñ—Ç —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π (–ø–æ–ª–æ–∂–∏—Ç–µ DejaVuSans.ttf –≤ –∫–æ—Ä–µ–Ω—å —Ä–µ–ø–æ)
    font_path = Path(__file__).parent / "DejaVuSans.ttf"
    if font_path.exists():
        pdf.add_font("DejaVu", "", str(font_path), uni=True)
        pdf.set_font("DejaVu", size=12)
    else:
        # –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: –±—É–¥–µ—Ç –±–µ–∑ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
        pdf.set_font("Helvetica", size=12)
        st.warning("–§–∞–π–ª DejaVuSans.ttf –Ω–µ –Ω–∞–π–¥–µ–Ω. PDF –º–æ–∂–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–∏—Ä–∏–ª–ª–∏—Ü—É.")

    pdf.cell(0, 10, txt="SmartMama: –í–∞—à–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é", ln=True, align="C")
    pdf.ln(5)
    pdf.multi_cell(0, 8, txt=strip_emoji(menu))

    # fpdf2 –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É ¬´–±–∞–π—Ç–æ–≤¬ª; –∫–æ–¥–∏—Ä—É–µ–º –≤ bytes
    pdf_bytes = pdf.output(dest="S").encode("latin-1")
    return pdf_bytes

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–≤–æ–¥–∞ ---
st.header("üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ")

col1, col2 = st.columns(2)
with col1:
    weight_before = st.number_input("–í–µ—Å –¥–æ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ (–∫–≥)", min_value=30.0, max_value=150.0, value=60.0, step=0.1)
    height = st.number_input("–†–æ—Å—Ç (—Å–º)", min_value=120, max_value=220, value=165, step=1)
with col2:
    current_weight = st.number_input("–¢–µ–∫—É—â–∏–π –≤–µ—Å (–∫–≥)", min_value=30.0, max_value=200.0, value=65.0, step=0.1)
    gest_weeks = st.number_input("–°—Ä–æ–∫ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ (–Ω–µ–¥–µ–ª—å)", min_value=1, max_value=42, value=12, step=1)

# --- –†–∞—Å—á—ë—Ç –ò–ú–¢ ---
bmi = weight_before / ((height / 100) ** 2)
if bmi < 18.5:
    bmi_category = "–ò–ú–¢ < 18.5"
elif 18.5 <= bmi < 25:
    bmi_category = "–ò–ú–¢ 18.5‚Äì24.9"
elif 25 <= bmi < 30:
    bmi_category = "–ò–ú–¢ 25.0‚Äì29.9"
else:
    bmi_category = "–ò–ú–¢ ‚â• 30.0"

st.info(f"üîπ –í–∞—à –ò–ú–¢ –¥–æ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏: **{bmi:.1f}** ‚Üí –∫–∞—Ç–µ–≥–æ—Ä–∏—è: **{bmi_category}**")

# --- –ü—Ä–µ–¥—ã–¥—É—â–∏–π –≤–µ—Å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ---
prev_weight = st.number_input(
    "–ü—Ä–µ–¥—ã–¥—É—â–∏–π –≤–µ—Å (–∫–≥, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
    min_value=0.0, max_value=200.0, value=0.0, step=0.1,
    help="–û—Å—Ç–∞–≤—å—Ç–µ 0, –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ",
)
prev_weeks = st.number_input(
    "–°—Ä–æ–∫ –Ω–∞ –º–æ–º–µ–Ω—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏—è (–Ω–µ–¥–µ–ª—å, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
    min_value=0, max_value=42, value=(gest_weeks - 1) if prev_weight > 0 else 0, step=1,
)

# --- –†–∞—Å—á—ë—Ç –ø—Ä–∏–±–∞–≤–∫–∏ ---
if prev_weight > 0:
    if prev_weeks >= gest_weeks:
        st.error("–°—Ä–æ–∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ä–æ–∫–∞.")
    else:
        weeks_passed = gest_weeks - prev_weeks
        weight_gain = current_weight - prev_weight
        weekly_gain = weight_gain / weeks_passed if weeks_passed > 0 else 0

        st.subheader("üìä –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏–±–∞–≤–∫–∏ –≤–µ—Å–∞")
        st.write(f"üî∏ –ü—Ä–∏–±–∞–≤–∫–∞ –∑–∞ {weeks_passed} –Ω–µ–¥.: **{weight_gain:.2f} –∫–≥**")
        st.write(f"üî∏ –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±–∞–≤–∫–∞ –≤ –Ω–µ–¥–µ–ª—é: **{weekly_gain:.2f} –∫–≥/–Ω–µ–¥**")

        min_norm, max_norm = norms[bmi_category]["weekly_kg"]

        if weekly_gain > max_norm:
            st.error(f"‚ö†Ô∏è –ü—Ä–∏–±–∞–≤–∫–∞ –≤—ã—à–µ –Ω–æ—Ä–º—ã ({max_norm:.2f} –∫–≥/–Ω–µ–¥). –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∏—Ç–∞–Ω–∏–µ.")
            menu_text = random.choice(sample_menus)

            # –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            st.markdown("### üìã –í–∞—à–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å")
            st.markdown(menu_text)

            # PDF
            pdf_bytes = create_pdf(menu_text)
            st.download_button(
                label="üì• –°–∫–∞—á–∞—Ç—å –º–µ–Ω—é –≤ PDF",
                data=pdf_bytes,
                file_name="SmartMama_–º–µ–Ω—é.pdf",
                mime="application/pdf",
            )

        elif weekly_gain < min_norm:
            st.warning(f"üî∏ –ü—Ä–∏–±–∞–≤–∫–∞ –Ω–∏–∂–µ –Ω–æ—Ä–º—ã ({min_norm:.2f} –∫–≥/–Ω–µ–¥). –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∏—Ç–∞–µ—Ç–µ—Å—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.")
        else:
            st.success(f"‚úÖ –ü—Ä–∏–±–∞–≤–∫–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã ({min_norm:.2f}‚Äì{max_norm:.2f} –∫–≥/–Ω–µ–¥). –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!")
else:
    st.info("‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–µ—Å –∏ —Å—Ä–æ–∫, —á—Ç–æ–±—ã —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–∏–Ω–∞–º–∏–∫—É –ø—Ä–∏–±–∞–≤–∫–∏.")

# --- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ—Ä–º–∞—Ö ---
st.header("üìö –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–æ—Ä–º—ã –ø—Ä–∏–±–∞–≤–∫–∏ –≤–µ—Å–∞")
df_norms = pd.DataFrame({
    "–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ò–ú–¢": list(norms.keys()),
    "–ó–∞ –≤—Å—é –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å (–∫–≥)": [v["total_kg"] for v in norms.values()],
    "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ (–∫–≥/–Ω–µ–¥)": [f"{v['weekly_kg'][0]:.2f}‚Äì{v['weekly_kg'][1]:.2f}" for v in norms.values()],
})
st.table(df_norms)

st.markdown("""
---
üí° **–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
- –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –±—ã—Å—Ç—Ä—ã–µ —É–≥–ª–µ–≤–æ–¥—ã: —Å–ª–∞–¥–æ—Å—Ç–∏, –±–µ–ª—ã–π —Ö–ª–µ–±, –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å, –≥–∞–∑–∏—Ä–æ–≤–∫—É.
- –ï—à—å—Ç–µ –±–æ–ª—å—à–µ –æ–≤–æ—â–µ–π, –Ω–µ–∂–∏—Ä–Ω–æ–≥–æ –º—è—Å–∞/—Ä—ã–±—ã, –±–æ–±–æ–≤—ã—Ö, —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤.
- –ü–µ–π—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥—ã (1.5‚Äì2 –ª/—Å—É—Ç –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏–π).
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —É–º–µ—Ä–µ–Ω–Ω—É—é —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—É—é —Å –≤—Ä–∞—á–æ–º.
""")
